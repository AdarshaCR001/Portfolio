{"version":3,"sources":["components/Header.js","components/Resume.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","resumeData","this","props","React","createElement","Fragment","id","className","href","title","name","style","color","fontFamily","role","roleDescription","socialLinks","map","item","url","target","rel","Component","Resume","work","ProjectName","Company","MonthOfJoining","YearOfJoining","MonthOfLeaving","YearOfLeaving","Description","point","education","specialization","UniversityName","StartYear","EndYear","Percenatge","skills","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55388cd8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n      \n      <header id=\"home\">\n         <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n          <a className=\"mobile-btn\" href=\"#hide\" title=\"Hide navigation\">Hide navigation</a>\n            <ul id=\"nav\" className=\"nav\">\n               <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n             <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\n               {/* <li><a className=\"smoothscroll\" href=\"#portfolio\">Works</a></li>\n               <li><a className=\"smoothscroll\" href=\"#testimonials\">Testimonials</a></li> */}\n               {/* <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li> */}\n            </ul>\n         </nav>\n\n         <div className=\"row banner\">\n            <div className=\"banner-text\">\n               <h1 className=\"responsive-headline\">I am {resumeData.name}.</h1>\n               <h3 className=\"justify\" style={{color:'#fff', fontFamily:'sans-serif '}}>I am a {resumeData.role}, {resumeData.roleDescription}\n               </h3>\n               <hr/>\n               <ul className=\"social\">\n                  {\n                    resumeData.socialLinks && resumeData.socialLinks.map(item =>{\n                      return(\n                              <li key={item.name}>\n                                <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\"><i className={item.className}></i></a>\n                              </li>\n                            )\n                          }\n                    )\n                  }\n               </ul>\n            </div>\n         </div>\n\n         <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#resume\"><i className=\"icon-down-circle\"></i></a>\n         </p>\n\n      </header>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class Resume extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"resume\">\n        <div className=\"row work\">\n          <div className=\"three columns header-col\">\n            <h1><span>Work</span></h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {\n              resumeData.work && resumeData.work.map((item) => {\n                return (\n                  <div className=\"row item\">\n                    <div className=\"twelve columns\">\n                      <h3>{item.ProjectName}</h3>\n                      <p className=\"info\">\n                        {item.Company}\n                        <span> </span> <em className=\"date\">{item.MonthOfJoining} {item.YearOfJoining}</em> - <em className=\"date\">{item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\n                      <p className=\"justify\">\n                        {item.Description && item.Description.map((point) => {\n                          return (<><ul><b>* </b>{point}</ul></>)\n                        })}\n                      </p>\n                    </div>\n\n                  </div>\n\n                )\n              })\n            }\n          </div>\n        </div>\n\n        <div className=\"row education\">\n\n          <div className=\"three columns header-col\">\n            <h1><span>Education</span></h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {\n              resumeData.education && resumeData.education.map((item) => {\n                return (\n                  <div className=\"row item\">\n                    <div className=\"twelve columns\">\n                      <h3>{item.specialization}</h3>\n                      <p className=\"info\">\n                        {item.UniversityName}\n                        <span>&bull;</span> <em className=\"date\">{item.StartYear} - {item.EndYear}</em></p>\n                      <p>\n                        {item.Percenatge}\n                      </p>\n                    </div>\n                  </div>\n                )\n              })\n            }\n          </div>\n        </div>\n\n        <div className=\"row skill\">\n\n          <div className=\"three columns header-col\">\n            <h1><span>Skills</span></h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n\n\n            <div className=\"bars\">\n\n              {\n                resumeData.skills\n              }\n\n            </div>\n\n          </div>\n\n        </div>\n\n      </section>\n    );\n  }\n}","let resumeData = {\n  \"imagebaseurl\": \"https://rbhatia46.github.io/\",\n  \"name\": \"Adarsha C R\",\n  \"role\": \"Senior Software Engineer\",\n  \"linkedinId\": \"https://www.linkedin.com/in/adarshacr/\",\n  \"skypeid\": \"Your skypeid\",\n  \"roleDescription\": \"with 4.5 years of experience in software development, currently working at Reloy, a product-based company in the real estate industry. Proficient in Data Structures and Algorithms, with experience in migrating monolithic application to microservice architecture.\",\n  \"socialLinks\": [\n    {\n      \"name\": \"linkedin\",\n      \"url\": \"https://www.linkedin.com/in/adarshacr/\",\n      \"className\": \"fa fa-linkedin\"\n    },\n    {\n      \"name\": \"github\",\n      \"url\": \"https://github.com/AdarshaCR001/\",\n      \"className\": \"fa fa-github\"\n    }\n  ],\n  \"city\": \"Bangalore\",\n  \"country\": \"India\",\n  \"website\": \"https://github.com/AdarshaCR001/\",\n  \"work\": [\n    {\n      \"ProjectName\": \"Winnre\",\n      \"Company\": \"Reloy\",\n      \"MonthOfJoining\": \"Nov\",\n      \"YearOfJoining\": \"2018\",\n      \"MonthOfLeaving\": \"Till\",\n      \"YearOfLeaving\": \"Now\",\n      \"Description\": [\"Designed and implemented REST APIs using Spring Boot for a web application and a mobile application\",\n        \"Optimized the application's scalability, reliability, and maintainability by breaking down the monolith into smaller, independent services that can be scaled and deployed independently\",\n        \"Designed and implemented integrations between the application and CRM systems like Salesforce and C4C\",\n        \"Managed the entire software development life cycle (SDLC), including requirements gathering, design, development, testing, deployment, and maintenance phases\",\n        \"Designed and implemented secure authentication and authorization using Spring Security, including creating user roles and permissions\",\n        \"Designed and implemented a real-time data processing system using Kafka\"\n      ]\n    },\n    {\n      \"ProjectName\": \"ICAEW\",\n      \"Company\": \"Cloudthing\",\n      \"MonthOfJoining\": \"Oct\",\n      \"YearOfJoining\": \"2018\",\n      \"MonthOfLeaving\": \"Nov\",\n      \"YearOfLeaving\": \"2020\",\n      \"Description\": [\"Implemented plugins and workflows to handle pre- operation and post-operation events for Microsoft Dynamics CRM, enabling real-time data validation and processing\",\n        \"Maintained and improved form validation scripts using JavaScript, fixing bugs and enhancing functionality based on user feedback and testing\",\n        \"Managed source code and version control using Git, including branching, merging, and resolving conflicts. Implemented Git workflows such as Gitflow to improve collaboration and code quality across teams.\"\n      ]\n    }\n  ],\n  \"education\": [\n    {\n      \"UniversityName\": \"Bangalore Institue of Technology\",\n      \"specialization\": \"MASTER OF COMPUTER APPLICATIONS (MCA) \",\n      \"Percenatge\": \"73.7%\",\n      \"StartYear\": \"2015\",\n      \"EndYear\": \"2018\"\n    },\n    {\n      \"UniversityName\": \"JSS College of Arts, Commerce and Science\",\n      \"specialization\": \"BACHELOR OF COMPUTER APPLICATIONS (BCA)\",\n      \"Percenatge\": \"63.4%\",\n      \"StartYear\": \"2012\",\n      \"EndYear\": \"2015\"\n    }\n  ],\n  \"skillsDescription\": \"Your skills here\",\n  \"skills\": [\n    \"Java, C#, JavaScript, Spring Boot, REST- API, Spring Data JPA, MySQL, Docker, AWS, Gradle, GIT, Kafka\"\n  ],\n  \"portfolio\": [\n    {\n      \"name\": \"project1\",\n      \"description\": \"mobileapp\",\n      \"imgurl\": \"images/portfolio/phone.jpg\"\n    },\n    {\n      \"name\": \"project2\",\n      \"description\": \"mobileapp\",\n      \"imgurl\": \"images/portfolio/project.jpg\"\n    },\n    {\n      \"name\": \"project3\",\n      \"description\": \"mobileapp\",\n      \"imgurl\": \"images/portfolio/project2.png\"\n    },\n    {\n      \"name\": \"project4\",\n      \"description\": \"mobileapp\",\n      \"imgurl\": \"images/portfolio/phone.jpg\"\n    }\n  ],\n  \"testimonials\": [\n    {\n      \"description\": \"This is a sample testimonial\",\n      \"name\": \"Some technical guy\"\n    },\n    {\n      \"description\": \"This is a sample testimonial\",\n      \"name\": \"Some technical guy\"\n    }\n  ]\n}\n\nexport default resumeData\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Resume from './components/Resume';\nimport resumeData from './resumeData';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData}/>\n        <Resume resumeData={resumeData}/>\n        {/* <Portfolio resumeData={resumeData}/>\n        <Testimonials resumeData={resumeData}/> */}\n        {/* <ContactUs resumeData={resumeData}/> */}\n        {/* <Footer resumeData={resumeData}/> */}\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}